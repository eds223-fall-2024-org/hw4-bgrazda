---
title: "Homework 4: Prioritizing Potential Aquaculture"
author: 'Brooke Grazda'
format: html
editor: visual
execute: 
  warning: false
  message: false
  eval: true
---

# Import libraries and data
```{r}
#| code-fold: true
#| output: false
#| quiet: true
library(tidyverse)
library(sf)
library(terra)
library(here)
library(tmap)
library(ggspatial)
```

```{r}
#| code-fold: true
#| output: false
#| quiet: true
# Import data
sst_2008 <- terra::rast(here('data', 'average_annual_sst_2008.tif'))
sst_2009 <- terra::rast(here('data', 'average_annual_sst_2009.tif'))
sst_2010 <- terra::rast(here('data', 'average_annual_sst_2010.tif'))
sst_2011 <- terra::rast(here('data', 'average_annual_sst_2011.tif'))

bathymetry <- terra::rast(here('data', 'depth.tif'))

west_coast <- st_read(here('data', 'wc_regions_clean.shp'))
```
## Process Data
```{r}
#| code-fold: true
#| quiet: true
# Check to make sure CRS matches before changing into stack
crs(sst_2008) == crs(sst_2009)
crs(sst_2009) == crs(sst_2010)
crs(sst_2010) == crs(sst_2011)

# Create a stack of SST rasters
combined_sst <- c(sst_2008, sst_2009, sst_2010, sst_2011)

# Find the mean of each
mean_sst <- mean(combined_sst) 

# Convert from kelvins to celsius
mean_sst_celsius <- mean_sst - 273.15

# Crop depth to the extent of the average sst
# bathymetry <- mask(crop(bathymetry, mean_sst_celsius), mean_sst_celsius)

# Resample the bathymetry resolution to the mean_sst_celsius
bathymetry_resampled <- resample(bathymetry, mean_sst_celsius, method = 'near')


```

```{r}
#| code-fold: true
#| quiet: true
if (ext(bathymetry_resampled) == ext(mean_sst_celsius)) {
  print("The extents are the same.")
} else {
  warning("The extents are different.")
}

# Check if the resolutions match
if (all(res(bathymetry_resampled) == res(mean_sst_celsius))) {
  print('Great job! Resolutions match.')
}else{
  warning('Resolutions do not match.')
}

# Check that the CRS match
if(crs(bathymetry_resampled) == crs(mean_sst_celsius)) {
  print('Coordinate reference systems match.')
} else{
  warning('CRS does not match. Now projecting the resampled bathymetry raster to the mean_sst_celsius CRS.')
  bathymetry_resampled <- project(bathymetry_resampled, crs(mean_sst_celsius), method = "bilinear")
  print('CRS now match.')
}

# Exploratory plots
#plot(bathymetry_resampled)
#plot(mean_sst_celsius)

# Stack both rasters after ensuring they have the same extent, resolution, and CRS
stacked_bathymetry_sst <- c(bathymetry_resampled, mean_sst_celsius)
plot(stacked_bathymetry_sst)
```
#### The plots above show the stacked raster data of depth and mean SST prior to reclassifyng values for oyster suitability.

## Find suitable locations for Oysters
```{r}
#| code-fold: true
#| quiet: true
# SST conditions for oysters
sst_rcl <- matrix(c(-Inf, 11, 0,
                    11, 30, 1,
                    30, Inf, 0),
                  ncol = 3, byrow = TRUE)
# Depth conditions for oysters
depth_rcl <- matrix(c(-Inf, 0, 0,
                      0, 70, 1,
                      70, Inf, 0),
                    ncol = 3, byrow = TRUE)
                    
# reclassify 
reclassify_sst <- classify(stacked_bathymetry_sst[[2]], rcl = sst_rcl,  include.lowest = TRUE)  
plot(reclassify_sst, main = 'Locations Meeting SST Conditions for Oysters')
#values(reclassify_sst) <- as.factor(values(reclassify_sst))
reclassify_depth <- classify(stacked_bathymetry_sst[[1]], rcl = depth_rcl,  include.lowest = TRUE)
#values(reclassify_depth) <- as.factor(values(reclassify_depth))
plot(reclassify_depth, main = 'Locations Meeting Depth Conditions for Oysters')

# Raster map algebra for 0s and 1s
sst_depth_reclass_total <- reclassify_sst * reclassify_depth

# View mask
plot(sst_depth_reclass_total, main = 'Locations Meeting Both Conditions for Oysters')
# Compute how many 1s showed up after meeting both conditions
#freq(sst_depth_reclass_total )
```
## Determine the most suitable Exclusive Economic Zones (EEZ) for Oysters
```{r}
#| code-fold: true
#| quiet: true

# Conditional check to transform or check CRS
if (crs(west_coast) == crs(sst_depth_reclass_total)){
  print('Coordinate reference systems match!')
}else{
  warning('Coordinate reference systems do not match. Transforming now.')
  west_coast <- st_transform(west_coast, crs = crs(sst_depth_reclass_total))
  print('West Coast Coordinate Reference System now matches the Oyster raster stack.')
}


# Compute the are covered by individual raster cells 
optimal_locs_mask <- cellSize(x = sst_depth_reclass_total, # area of cells
                              mask = TRUE,
                              unit = 'km',
                              transform = TRUE)

# Plot to view the mask
plot(optimal_locs_mask, main = 'Area Covered by Masked Reclassified Raster Cells')

# Rasterize the west coast df with the mask of suitable locations that meet conditions from reclassification
eez_raster <- rasterize(x = west_coast,
                        y = optimal_locs_mask,
                        field = 'rgn')

# plot(eez_raster)
```

```{r}
#| code-fold: true
#| quiet: true
# Area in each region
eez_zones <- zonal(x = optimal_locs_mask,
                           z = eez_raster,
                           fun = "sum",
                           na.rm = TRUE)
  


# Join area calcs with the eez_zone dataset
eez_suitability_area <- left_join(west_coast, eez_zones, by = 'rgn')  

# GGspatial plot
ggplot() +
  geom_sf(data = eez_suitability_area, aes(fill = area)) +
  scale_fill_distiller(palette = "Blues",
                       direction = 1) +
  coord_sf() +
    theme_minimal() +
   labs(title ='Total Suitable Area for Oyster Aquaculture \n Off the West Coast',
        x = 'Longitude',
        y= 'Latitude',
        fill = bquote("Suitable Area (km"^{2}~")" )) +
   annotation_north_arrow(location = "tr",
                         which_north = "true",
                         height = unit(0.8, "cm"),
                         width = unit(0.6, "cm")) +
   annotation_scale(location = 'bl',
                    style = 'bar',
                    width_hint = .35) +
   scale_x_continuous(breaks = seq(-180, 180, by = 5))
  

```
##### Now, I will repeat this workflow for the Dungeness Crab (*Metacarcinus magister*).

## Create Function to Find Total Suitable Area for Dungeness Crab
```{r}
#| code-fold: true
#| quiet: true
# Dungeness Crab 
# Create Function 
suitable_locations_map <- function(min_temp, max_temp, min_depth, max_depth, species){
  # Reclassify the depth based on the passed in arguments for depth
  species_rcl_depth <- matrix(c(-Inf, min_depth, NA,
                           min_depth, max_depth, 1,
                           max_depth, Inf, NA),
                         ncol = 3, byrow = TRUE) 
  
   
  # min and max temp for reclassification
  species_rcl_sst <- matrix(c(-Inf, min_temp, NA,
                           min_temp, max_temp, 1,
                           max_temp, Inf, NA),
                         ncol = 3, byrow = TRUE) 
  mean_sst_celsius[mean_sst_celsius[] < min_temp | mean_sst_celsius[] > max_temp] <- NA
  bathymetry_resampled[bathymetry_resampled[] < min_depth | bathymetry_resampled[] > max_depth] <- NA

  # Classify 
  depth <- classify(bathymetry_resampled, rcl = species_rcl_depth,  include.lowest = TRUE)
 sst <-  classify(mean_sst_celsius, rcl = species_rcl_sst,  include.lowest = TRUE)
  
  # Raster multiplication to find areas that meet both conditions
  total_rcl <- lapp(c(sst, depth), fun = '*')

  # Count the number of raster cells for area
  suitable_mask <- cellSize(x = total_rcl, # area of cells
                              unit = 'km',
                              transform = TRUE)
  
  # rasterize the west coast sf object with the mask
  eez_rasterized <- rasterize(x = west_coast,
                        y = suitable_mask,
                        field = 'rgn',
                        na.rm = TRUE)
  
  # Sum up the zones by area using the mask and raster
  zones <- zonal(x = suitable_mask,
                 z = eez_rasterized,
                 fun = "sum",
                 na.rm = TRUE)
  # Join both 
  join_area <- left_join(west_coast, zones, by = join_by(rgn))
  
  # Define northern and southern extents
north_extent <- raster::extent(-180, 180, 40, 90) # Adjust latitude as needed
south_extent <- raster::extent(-180, 180, -90, 40)

# Crop rasters
north_raster <- crop(total_rcl, north_extent)
south_raster <- crop(total_rcl, south_extent)

# Calculate suitable cell counts
north_suitable <- sum(values(north_raster) == 1, na.rm = TRUE)
south_suitable <- sum(values(south_raster) == 1, na.rm = TRUE)

print(paste("Northern Suitable Cells:", north_suitable))
print(paste("Southern Suitable Cells:", south_suitable))


  # Using species argument, initialize string object for title
  species_string <- stringr::str_glue('Total Suitable Area for {species}
                                      Aquaculture Off the West Coast')
  ## GGSpatial plot
ggplot() +
  geom_sf(data = join_area, aes(fill = area)) +
 scale_fill_distiller(palette = "Reds", direction = 1, limits = c(0, max(join_area$area))) +
  coord_sf() +
    theme_minimal() +
   labs(title = species_string,
        x = 'Longitude',
        y= 'Latitude',
        fill = bquote("Suitable Area (km"^{2}~")" )) +
   annotation_north_arrow(location = "tr",
                         which_north = "true",
                         height = unit(0.8, "cm"),
                         width = unit(0.6, "cm")) +
   annotation_scale(location = 'bl',
                    style = 'bar',
                    width_hint = .35) +
   scale_x_continuous(breaks = seq(-180, 180, by = 5))

}
  
# Pass in arguments for a given species 
suitable_locations_map(min_temp = 3, max_temp = 19, min_depth = 0, max_depth = 360, species = 'Dungeness Crab')

```



## Summary
Looking at both of these maps of potential areas for aquaculture, there seems to be potential for the Dungeness Crab and Oysters to be harvested sustainably for aquaculture. The Dungeneess Crab's native range is more north as there are more suitable cells in the North, and it has a greater range of depth and temperature, however there are overlapping regions for both species. Oyster Aquaculture may occur primarily in southern California, where the temperature and depth conditions are met. 

## References

"Sea Surface Temperature Data", "NOAA Coral Reef Watch. 2019, updated daily. NOAA Coral Reef Watch Version 3.1 Daily 5km Satellite Regional Virtual Station Time Series Data. College Park, Maryland, USA: NOAA Coral Reef Watch. Data set accessed 2024-11-20 at https://coralreefwatch.noaa.gov/product/vs/data.php.", "[NOAA Coral Reef Watch](https://coralreefwatch.noaa.gov/product/5km/index_5km_ssta.php)"

"Bathymetry Data", "GEBCO Compilation Group (2022) GEBCO_2022 Grid (doi:10.5285/e0f0bb80-ab44-2739-e053-6c86abc0289c)", "[GEBCO](https://www.gebco.net/data_and_products/gridded_bathymetry_data/#area)"

"Exclusive Economic Zones", "Flanders Marine Institute (2024): MarineRegions.org. Available online at www.marineregions.org. Consulted on 2024-11-30.", "[Marine Regions](https://www.marineregions.org/eez.php)"

"Sea Life Base Aquaculture Data", "Palomares, M.L.D. and D. Pauly. Editors. 2024. SeaLifeBase. World Wide Web electronic publication. www.sealifebase.org, version (08/2024).", "[Sea Life Base](https://www.sealifebase.ca/search.php)"





